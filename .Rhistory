rm(list = ls(all=TRUE)); #Remove all the objects in the memory
setwd("~/Dropbox (Salmon Watersheds)/X Drive/1_PROJECTS/Population Methods and Analysis/ProgRegSummaries/data")
library(ggplot2)
#library(plyr)
require(reshape2)
library(dplyr)
library(broom)
library(geosphere)
#read in CU level data
cc_file <- read.csv("dataset_1part1.Dec072020_CC.csv", header = T)
fraser_file <- read.csv("dataset_1part1.Jul282020_Fraser.csv", header = T)
vimi_file <- read.csv("dataset_1part1.Dec082020_VIMI.csv", header = T)
nass_file <- read.csv("dataset_1part1.Dec092020_Nass.csv", header = T)
skeena_file <- read.csv("dataset_1part1.Dec092020_Skeena.csv", header = T)
# combine files from each region
cu_dat <- rbind(cc_file,fraser_file,vimi_file,nass_file,skeena_file)
cu_dat <- select(cu_dat,CUID,Species,Year,Total.run,Region)
d1<- na.omit(cu_dat) %>%
group_by(., Species, Region, Year) %>%
summarise(prov_runsize_raw = sum(Total.run))
View(d1)
frm <- frm %>%
mutate(prov_runsize_relative = prov_runsize_raw / 1000)
frm <- d1 %>%
mutate(prov_runsize_relative = prov_runsize_raw / 1000)
View(frm)
dat2 <- d1 %>%
group_by(Species)                                %>%
group_by(Region)                                %>%
mutate(prov_runsize_relative = Value / max(Value))
dat2 <- d1 %>%
group_by(Species)                                %>%
group_by(Region)                                %>%
mutate(prov_runsize_relative = prov_runsize_raw / max(prov_runsize_raw))
View(dat2)
dat2 <- d1 %>%
group_by(Species)                                %>%
group_by(Region)                                %>%
mutate(prov_runsize_relative = (prov_runsize_raw / max(prov_runsize_raw))*100)
View(dat2)
dat2 <- d1 %>%
group_by(Species,Region)                                %>%
mutate(prov_runsize_relative = (prov_runsize_raw / max(prov_runsize_raw))*100)
View(dat2)
d1<- na.omit(cu_dat) %>%
group_by(., Species, Region, Year) %>%
summarise(prov_runsize_raw = sum(Total.run)) ## raw run size
#check specieas names
unique(cu_dat$Species)
cu_dat$Species[cu_dat$Species=="River Sockeye"] <- "Sockeye"
#check specieas names
unique(cu_dat$Species)
cu_dat$Species[cu_dat$Species=="Lake Sockeye"] <- "Sockeye"
#check specieas names
unique(cu_dat$Species)
d1<- na.omit(cu_dat) %>%
group_by(., Species, Region, Year) %>%
summarise(prov_runsize_raw = sum(Total.run)) ## raw run size
dat2 <- d1 %>%
group_by(Species,Region) %>%
mutate(prov_runsize_relative = (prov_runsize_raw / max(prov_runsize_raw))*100) #relative run size
setwd("~/Dropbox (Salmon Watersheds)/X Drive/1_PROJECTS/Population Methods and Analysis/ProgRegSummaries/output")
setwd("~/Dropbox (Salmon Watersheds)/X Drive/1_PROJECTS/Population Methods and Analysis/ProgRegSummaries/output")
write.csv(dat2, "Prov_runsize_1_20210521.csv", row.names=FALSE)
setwd("~/Dropbox (Salmon Watersheds)/X Drive/1_PROJECTS/Population Methods and Analysis/ProgRegSummaries/data")
View(dat2)
dat3 %>% dat2 %>% group_by(Species,Region) %>%
summarize(enddecade_year = max(Year))
dat3 -> dat2 %>% group_by(Species,Region) %>%
summarize(enddecade_year = max(Year))
dat2 %>% group_by(Species,Region) %>%
summarize(enddecade_year = max(Year))
dat2
dat3 <- dat2 %>% group_by(Species,Region) %>%
summarize(enddecade_year = max(Year))
View(dat3)
dat3 <- dat3 %>%
mutate(startdecade_year = (enddecade_year-10)) #relative run size
View(dat3)
dat3 <- dat3 %>%
mutate(startdecade_year = (enddecade_year-9)) #relative run size
View(dat3)
View(dat2)
dat4 <- dat2 %>%
group_by(Species,Region) %>%
summarise(change_lastdecade = (average(prov_runsize_raw[1:10]) / average(prov_runsize_raw))*100) #relative run size
dat4 <- dat2 %>%
group_by(Species,Region) %>%
summarise(change_lastdecade = (mean(prov_runsize_raw[1:10]) / mean(prov_runsize_raw))*100) #relative run size
View(dat4)
dat4 <- dat2 %>%
group_by(Species,Region) %>%
summarise(change_lastdecade = ((mean(prov_runsize_raw[1:10])-mean(prov_runsize_raw)) / mean(prov_runsize_raw))*100) #relative run size
View(dat4)
dat4 <- dat2 %>%
group_by(Species,Region) %>%
summarise(change_lastdecade = ((mean(slice_max(prov_runsize_raw,10))-mean(prov_runsize_raw)) / mean(prov_runsize_raw))*100) #relative run size
(slice_max(prov_runsize_raw,10)
(slice_max(prov_runsize_raw,10))
(slice_max(prov_runsize_raw,10)))
(slice_max(prov_runsize_raw,10)))
(slice_max(prov_runsize_raw,10))
(slice_max(dat2$prov_runsize_raw,10))
(slice_max(dat2$prov_runsize_raw,n=10))
dat2 %>% slice_max(prov_run_size_raw, n = 10)
dat2 %>% slice_max(prov_runsize_raw, n = 10)
(slice_max(dat2$Year,n=10))
dat2 %>% slice_max(Year, n = 10)
dat4 <- dat2 %>%
group_by(Species,Region) %>%
summarise(change_lastdecade = ((mean(tail(prov_runsize_raw,10))-mean(prov_runsize_raw)) / mean(prov_runsize_raw))*100) #relative run size
View(dat4)
View(dat3)
View(dat4)
View(dat3)
dat5 <- left_join(dat3, dat4, by=c("Region","Species"))
View(dat5)
setwd("~/Dropbox (Salmon Watersheds)/X Drive/1_PROJECTS/Population Methods and Analysis/ProgRegSummaries/output")
write.csv(dat2, "Prov_runsize_2_20210521.csv", row.names=FALSE)
View(dat5)
tail(dat2$prov_runsize_raw,10)
View(dat2)
install.packages("here")
rm(list = ls(all=TRUE)); #Remove all the objects in the memory
# One time command to set the ProgRegSummaries as the highest level directory
#here::set_here()
setwd(here::here())
#setwd("~/Dropbox (Salmon Watersheds)/X Drive/1_PROJECTS/Population Methods and Analysis/ProgRegSummaries/data")
# Delete plyr and reshape3 if not loading them doesn't break your code lol, load as necessary
#library(plyr)
#require(reshape2)  # see if you even need this anymore
library(tidyverse)  # good default load capturing ggplot2 and dplyr
install.packages("tidyverse")
#setwd("~/Dropbox (Salmon Watersheds)/X Drive/1_PROJECTS/Population Methods and Analysis/ProgRegSummaries/data")
# Delete plyr and reshape3 if not loading them doesn't break your code lol, load as necessary
#library(plyr)
#require(reshape2)  # see if you even need this anymore
library(tidyverse)  # good default load capturing ggplot2 and dplyr
library(broom)
library(geosphere)
#read in CU level data
cc_file <- read.csv("data/dataset_1part1.Dec072020_CC.csv", header = T)
fraser_file <- read.csv("data/dataset_1part1.Jul282020_Fraser.csv", header = T)
vimi_file <- read.csv("data/dataset_1part1.Dec082020_VIMI.csv", header = T)
nass_file <- read.csv("data/dataset_1part1.Dec092020_Nass.csv", header = T)
skeena_file <- read.csv("data/dataset_1part1.Dec092020_Skeena.csv", header = T)
# combine files from each region
cu_dat <- rbind(cc_file,fraser_file,vimi_file,nass_file,skeena_file)
cu_dat <- select(cu_dat,CUID,Species,Year,Total.run,Region)
#check species names
unique(cu_dat$Species)
cu_dat$Species[cu_dat$Species=="River Sockeye"] <- "Sockeye"
cu_dat$Species[cu_dat$Species=="Lake Sockeye"] <- "Sockeye"
# Attempt at selecting 80% runs?
# ------------------------------------------------------------------------------
cu_dat <- as_tibble(cu_dat)  # tibble print method is prettier
max_runs <-
cu_dat %>%
drop_na(Total.run) %>%  # tidyverse alternative for
group_by(CUID, Species) %>%
slice(which.max(Total.run)) %>%
ungroup() %>%  # don't forget this step as this can bite you later
rename(max_run = Total.run)
total_max_run <-
max_runs %>%
group_by(Species, Region) %>%
summarise(total_max_run = sum(Total.run)) %>%
ungroup() %>%
mutate(total_max_80 = 0.8 * total_max_run)
View(max_runs)
test <-
cu_dat %>%
drop_na(Total.run) %>%
group_by(Species, Region, Year) %>%
summarise(raw_runsize = sum(Total.run)) %>%
left_join(., total_max_run) %>%
filter(raw_runsize >= total_max_80)
View(max_runs)
max_runs <-
cu_dat %>%
drop_na(Total.run) %>%  # tidyverse alternative for
group_by(CUID, Species) %>%
slice(which.max(Total.run)) %>%
ungroup() %>%  # don't forget this step as this can bite you later
rename(max_run = Total.run)
View(max_runs)
total_max_run <-
max_runs %>%
group_by(Species, Region) %>%
summarise(total_max_run = sum(max_run)) %>%
ungroup() %>%
mutate(total_max_80 = 0.8 * total_max_run)
View(total_max_run)
test <-
cu_dat %>%
drop_na(Total.run) %>%
group_by(Species, Region, Year) %>%
summarise(raw_runsize = sum(Total.run)) %>%
left_join(., total_max_run) %>%
filter(raw_runsize >= total_max_80)
View(test)
max_runs <-
cu_dat %>%
drop_na(Total.run) %>%  # tidyverse alternative for
group_by(CUID, Species) %>%
slice(which.max(Total.run)) %>%
ungroup() %>%  # don't forget this step as this can bite you later
dplyr::rename(max_run = Total.run)
View(max_runs)
